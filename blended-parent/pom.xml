<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2014ff,  https://github.com/woq-blended
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>de.wayofquality.blended</groupId>
  <artifactId>blended.parent</artifactId>
  <packaging>pom</packaging>

  <version>2.0-RC4</version>

  <name>${project.artifactId}</name>
  <url>https://github.com/woq-blended/blended</url>
  <description>Common Settings and configurations for all blended modules.</description>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <organization>
    <name>https://github.com/woq-blended</name>
    <url>https://github.com/woq-blended/blended</url>
  </organization>

  <developers>
    <developer>
      <name>Andreas Gies</name>
      <email>andreas@wayofquality.de</email>
      <organization>WoQ - Way of Quality GmbH</organization>
      <organizationUrl>http://www.wayofquality.de</organizationUrl>
    </developer>

    <developer>
      <name>Tobias Roeser</name>
      <email>tobias.roeser@tototec.de</email>
      <organization>ToToTec GbR</organization>
    </developer>
  </developers>

  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <scm>
    <connection>scm:git:ssh://git@github.com/woq-blended/blended</connection>
    <developerConnection>scm:git:ssh://git@github.com/woq-blended/blended.git</developerConnection>
    <url>https://github.com/woq-blended/blended</url>
  </scm>

  <properties>
    <blended.version>2.0-RC4</blended.version>

    <java.version>1.7</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <bundle.plugin.version>3.0.1</bundle.plugin.version>
    <bndtool.version>3.2.0</bndtool.version>

    <war.plugin.version>2.6</war.plugin.version>

    <scala.version>2.10</scala.version>
    <scala.micro.version>6</scala.micro.version>

    <!-- Where is our docker for building the images and running the itests -->
    <docker.host>localhost</docker.host>
    <docker.port>4243</docker.port>

    <!-- plugin versions -->
    <compiler-plugin.version>2.5.1</compiler-plugin.version>

    <!-- Log level for tests -->
    <loglevel.test>INFO</loglevel.test>

    <!-- library versions -->

    <activemq.version>5.13.0</activemq.version>
    <camel.version>2.16.1</camel.version>
    <hawtio.version>1.4.65</hawtio.version>

    <!--used -->
    <activeio.version>3.1.4</activeio.version>
    <akka.version>2.3.10</akka.version>
    <aries.blueprint.version>1.0.1</aries.blueprint.version>
    <aries.blueprint.core.version>1.4.3</aries.blueprint.core.version>
    <aries.jmx.version>1.1.1</aries.jmx.version>
    <aries.proxy.version>1.0.1</aries.proxy.version>
    <aries.util.version>1.1.0</aries.util.version>
    <cmdoption.version>0.4.2</cmdoption.version>
    <commons.beanutils.version>1.8.3_2</commons.beanutils.version>
    <commons.codec.version>1.6.0</commons.codec.version>
    <commons.collections.version>3.2.1</commons.collections.version>
    <commons.discovery.version>0.4.0</commons.discovery.version>
    <commons.exec.version>1.3</commons.exec.version>
    <commons.httpclient.version>3.1.0</commons.httpclient.version>
    <commons.io.version>1.4.0</commons.io.version>
    <commons.lang.version>2.6</commons.lang.version>
    <commons.net.version>3.3</commons.net.version>
    <commons.pool.version>1.6</commons.pool.version>
    <cglib.version>2.2.0</cglib.version>
    <docker-java.version>1.0.0</docker-java.version>
    <domino.version>1.1.1</domino.version>
    <felix.ca.version>1.8.6</felix.ca.version>
    <felix.cm.version>1.6.0</felix.cm.version>
    <felix.event.version>1.3.2</felix.event.version>
    <felix.fileinstall.version>3.4.2</felix.fileinstall.version>
    <felix.framework.version>5.0.0</felix.framework.version>
    <felix.gogo.command.version>0.14.0</felix.gogo.command.version>
    <felix.gogo.runtime.version>0.16.2</felix.gogo.runtime.version>
    <felix.gogo.shell.version>0.10.0</felix.gogo.shell.version>
    <felix.metatype.version>1.0.12</felix.metatype.version>
    <felix.scr.version>1.6.2</felix.scr.version>
    <hamcrest.version>1.3.0.1</hamcrest.version>
    <insight-log.version>7.2.0.redhat-060</insight-log.version>
    <jackson.version>1.9.12</jackson.version>
    <jasypt.version>1.9.0_1</jasypt.version>
    <javax.mail.version>1.4.5</javax.mail.version>
    <jersey.version>1.18.1</jersey.version>
    <jettison.version>1.3.4</jettison.version>
    <jetty.version>7.6.8.v20121106</jetty.version>
    <jledit.version>0.2.0</jledit.version>
    <joda-time.version>1.6.2</joda-time.version>
    <jolokia.version>1.3.3</jolokia.version>
    <jsch.version>0.1.48_1</jsch.version>
    <json-lenses.version>0.5.4</json-lenses.version>
    <junit.version>4.11</junit.version>
    <linkedhashmap.version>1.4.2</linkedhashmap.version>
    <log4j.version>1.2.15</log4j.version>
    <logback.version>1.1.3</logback.version>
    <mimepull.version>1.9.4</mimepull.version>
    <mockito.version>1.9.5</mockito.version>
    <neo4j.version>2.1.2</neo4j.version>
    <netty.version>3.8.1.Final</netty.version>
    <ops4j-base.version>1.4.0</ops4j-base.version>
    <osgi.core.version>4.3.0</osgi.core.version>
    <osgi.enterprise.version>4.2.0</osgi.enterprise.version>
    <osweb.asm.version>3.1.0</osweb.asm.version>
    <ow2.asm.all.version>4.1</ow2.asm.all.version>
    <parboiled.version>1.1.6</parboiled.version>
    <pax-swissbox.version>1.7.0</pax-swissbox.version>
    <pax-web.version>3.1.0</pax-web.version>
    <protobuf.version>2.5.0</protobuf.version>
    <scalatest.version>2.2.4</scalatest.version>
    <shapeless.version>1.2.4</shapeless.version>
    <shiro.version>1.2.4</shiro.version>
    <slf4j.version>1.7.12</slf4j.version>
    <spray.version>1.3.2</spray.version>
    <spray-json.version>1.3.1</spray-json.version>
    <spring.osgi.version>1.2.1</spring.osgi.version>
    <spring.version>3.2.14.RELEASE</spring.version>
    <stax.api.version>2.2.0</stax.api.version>
    <typesafe.config.version>1.2.1</typesafe.config.version>
    <uncommons.maths.version>1.2.2</uncommons.maths.version>
    <xbean.version>3.16</xbean.version>
    <xbean.asm4.version>3.16</xbean.asm4.version>
    <xbean.finder.version>3.16</xbean.finder.version>
    <xmlbeans.version>2.4.0</xmlbeans.version>
  </properties>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/test/binaryResources</directory>
        <filtering>false</filtering>
      </testResource>
    </testResources>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/binaryResources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${war.plugin.version}</version>
          <configuration>
            <archive>
              <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.9.1</version>
          <executions>
            <execution>
              <id>add-scala-sources</id>
              <phase>generate-sources</phase>
              <goals><goal>add-source</goal></goals>
              <configuration>
                <sources>
                  <source>src/main/scala</source>
                </sources>
              </configuration>
            </execution>
            <execution>
              <id>add-scala-test-sources</id>
              <phase>generate-sources</phase>
              <goals><goal>add-test-source</goal></goals>
              <configuration>
                <sources>
                  <source>src/test/scala</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.4</version>
          <executions>
            <!-- here we override the super-pom attach-sources executionid which
            calls sources:jar goal. That goals forks the lifecycle, causing
            the generate-sources phase to be called twice for the install goal.
            This causes any other plugin bound to the generate-sources phase to
            be called twice which usually has nasty side effects, let alone
            creating duplicate processing and longer build times. -->
            <!-- http://blog.peterlynch.ca/2010/05/maven-how-to-prevent-generate-sources.html -->
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.4</version>
          <executions>

            <execution>
              <id>attach-sources-no-fork</id>
              <inherited>true</inherited>
              <phase>generate-sources</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>

            <execution>
              <id>attach-sources</id>
              <phase>DISABLE_FORKED_LIFECYCLE_MSOURCES-13</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>

          </executions>

          <configuration>
            <includes>
              <include>**/*.java</include>
              <include>**/*.scala</include>
            </includes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.3.1</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.0.5</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <phase>verify</phase>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.3</version>
        </plugin>

        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>${bundle.plugin.version}</version>
          <extensions>true</extensions>
          <dependencies>
            <dependency>
              <groupId>biz.aQute.bnd</groupId>
              <artifactId>biz.aQute.bndlib</artifactId>
              <version>${bndtool.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>manifest</id>
              <phase>process-classes</phase>
              <goals>
                <goal>manifest</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <supportedProjectTypes>
              <supportedProjectType>jar</supportedProjectType>
              <supportedProjectType>bundle</supportedProjectType>
              <supportedProjectType>war</supportedProjectType>
            </supportedProjectTypes>
            <instructions>
              <_include>osgi.bnd</_include>
            </instructions>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${compiler-plugin.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <fork>true</fork>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12</version>

          <dependencies>
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>surefire-junit47</artifactId>
              <version>2.12</version>
            </dependency>
          </dependencies>

          <configuration>
            <forkMode>always</forkMode>
            <forkedProcessTimeoutInSeconds>300</forkedProcessTimeoutInSeconds>
            <argLine>-Xmx1024m</argLine>
          </configuration>

          <executions>
            <execution>
              <id>default-test</id>
              <phase>test</phase>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.1</version>
          <executions>
            <execution>
              <id>compile-scala</id>
              <goals>
                <goal>compile</goal>
              </goals>
              <configuration>
                <fork>true</fork>
                <recompileMode>incremental</recompileMode>
                <useZincServer>true</useZincServer>
                <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
                <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
                <args>
                  <arg>-deprecation</arg>
                  <arg>-feature</arg>
                  <arg>-Xlint</arg>
                  <!-- <arg>-Ywarn-unused-import</arg> -->
                  <arg>-Ywarn-nullary-override</arg>
                </args>
                <jvmArgs>
                  <jvmArg>-Xms256m</jvmArg>
                  <jvmArg>-Xmx512m</jvmArg>
                  <jvmArg>-XX:MaxPermSize=128m</jvmArg>
                </jvmArgs>
              </configuration>
            </execution>
            <execution>
              <id>test-compile-scala</id>
              <goals>
                <goal>testCompile</goal>
              </goals>
              <configuration>
                <fork>true</fork>
                <recompileMode>incremental</recompileMode>
                <useZincServer>true</useZincServer>
                <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
                <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
                <args>
                  <arg>-deprecation</arg>
                  <arg>-feature</arg>
                  <arg>-Xlint</arg>
                  <!-- <arg>-Ywarn-unused-import</arg> -->
                  <arg>-Ywarn-nullary-override</arg>
                </args>
                <jvmArgs>
                  <jvmArg>-Xms256m</jvmArg>
                  <jvmArg>-Xmx512m</jvmArg>
                  <jvmArg>-XX:MaxPermSize=128m</jvmArg>
                </jvmArgs>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <scalaVersion>${scala.version}.${scala.micro.version}</scalaVersion>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.alexecollins.docker</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>2.4.0</version>
          <configuration>
            <version>1.16</version>
            <username>atooni</username>
            <email>andreas@wayofquality.de</email>
            <!-- This is not the real password - the real password is required when pushing to docker. -->
            <password>foo</password>
            <prefix>blended</prefix>
            <host>http://${docker.host}:${docker.port}</host>
          </configuration>
          <executions>
            <execution>
              <id>clean-docker</id>
              <goals>
                <goal>clean</goal>
              </goals>
              <phase>clean</phase>
            </execution>
            <execution>
              <id>package-docker</id>
              <goals>
                <goal>package</goal>
              </goals>
              <phase>package</phase>
            </execution>
            <execution>
              <id>deploy-docker</id>
              <goals>
                <goal>deploy</goal>
              </goals>
              <phase>deploy</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>1.0</version>
          <configuration>
            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
            <junitxml>.</junitxml>
            <stdout>FT</stdout>
          </configuration>
          <executions>
            <execution>
              <id>test</id>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.9.1</version>
      </plugin>

    </plugins>

  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}.${scala.micro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.version}.${scala.micro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-osgi</artifactId>
        <version>${activemq.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>

    <repository>
      <id>FUSEStaging</id>
      <url>http://repo.fusesource.com/nexus/content/repositories/jboss-fuse-6.1.x</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>SpringBundles</id>
      <url>http://repository.springsource.com/maven/bundles/release</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>SpringExternalBundles</id>
      <url>http://repository.springsource.com/maven/bundles/external</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

  </repositories>

  <profiles>

    <profile>
      <id>baseline</id>
      <build>
        <plugins>
            <plugin>
              <groupId>org.apache.felix</groupId>
              <artifactId>maven-bundle-plugin</artifactId>
              <version>${bundle.plugin.version}</version>
              <extensions>true</extensions>
              <dependencies>
                <dependency>
                  <groupId>biz.aQute.bnd</groupId>
                  <artifactId>biz.aQute.bndlib</artifactId>
                  <version>${bndtool.version}</version>
                </dependency>
              </dependencies>
              <executions>
                <execution>
                  <id>baseline</id>
                  <phase>verify</phase>
                  <goals>
                    <goal>baseline</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <supportedProjectTypes>
                  <supportedProjectType>jar</supportedProjectType>
                  <supportedProjectType>bundle</supportedProjectType>
                  <supportedProjectType>war</supportedProjectType>
                </supportedProjectTypes>
                <instructions>
                  <_include>osgi.bnd</_include>
                </instructions>
              </configuration>
            </plugin>
          </plugins>
        </build>
    </profile>

    <profile>
      <id>release</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-doc</id>
                <goals>
                  <goal>doc-jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.5</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>

</project>
